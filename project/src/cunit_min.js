function CUnit(a,b,c,e,d,f){THREE.Object3D.call(this);this.type="CUnit";this.color=this.getColorPerWeight(d);this.opacity=1;this.geometry=GEO_CUBE;this.cell_x=c;this.cell_y=b;this.time_step=e;this.zscore=d;this.dimension=a;this.mesh=new THREE.Mesh(this.geometry,new THREE.MeshPhongMaterial({color:this.color,transparent:!0,opacity:this.opacity}));this.mesh.name="Longitude: "+c+" | Latitude: "+b+" | Time step: "+e+" | ZScore: "+d+" | PValue: "+f;this.mesh.position.x=sizeLat/size*this.cell_y-offsetX;
this.mesh.position.z=sizeLng/size*-this.cell_x-offsetZ;this.mesh.position.y=sizeTime/size*this.time_step-offsetY;this.mesh.renderOrder=2;this.currentSize=this.mesh.scale.x;this.bearing=this.calcBearing();this.angularDistance=this.calcAngularDistance();this.latitude=this.calcLatitude();this.longitude=this.calcLongitude();locations.push([this.mesh.name,this.latitude,this.longitude])}CUnit.prototype=Object.create(THREE.Mesh.prototype);CUnit.prototype.constructor=CUnit;CUnit.prototype.getMesh=function(){return this.mesh};
CUnit.prototype.changeGeometry=function(a){this.mesh.geometry=a};CUnit.prototype.getColorPerWeight=function(a){return-2.58>a?new THREE.Color(3368652):-2.58<=a&&-1.96>a?new THREE.Color(10066380):-1.96<=a&&-1.65>a?new THREE.Color(12632256):-1.65<=a&&1.65>a?new THREE.Color(16777164):1.65<=a&&1.96>a?new THREE.Color(16764057):1.96<=a&&2.58>a?new THREE.Color(16737894):new THREE.Color(13382451)};
CUnit.prototype.reinitiate=function(){this.mesh.material=new THREE.MeshPhongMaterial({color:this.getColorPerWeight(this.zscore),transparent:!0,opacity:this.opacity})};
CUnit.prototype.setCunitSize=function(a,b,c){this.mesh.scale.set(a,b,c);this.currentSize=this.mesh.scale.x;offsetZ=-sizeLng/2+this.mesh.scale.z*this.dimension/2;offsetX=sizeLat/2-this.mesh.scale.x*this.dimension/2;offsetY=sizeTime/2-this.mesh.scale.y*this.dimension/2;mustScale?(this.mesh.position.z=sizeLat/newSizeZ*-(this.cell_x-yLowerBound)-offsetZ,this.mesh.position.y=sizeTime/newSizeY*(this.time_step-timeStepLowerBound)-offsetY,this.mesh.position.x=sizeLng/newSizeX*(this.cell_y-xLowerBound)-offsetX):
(this.mesh.position.x=sizeLat/size*this.cell_y-offsetX,this.mesh.position.z=sizeLng/size*-this.cell_x-offsetZ,this.mesh.position.y=sizeTime/size*this.time_step-offsetY)};CUnit.prototype.getCellY=function(){return this.cell_y};CUnit.prototype.getCellX=function(){return this.cell_x};CUnit.prototype.getTimeStep=function(){return this.time_step};CUnit.prototype.getZScore=function(){return this.zscore};CUnit.prototype.getDimension=function(){return this.dimension};
CUnit.prototype.getScalePerWeight=function(){return(this.zscore-ZSCORE_LOWER_BOUND)*sizeTime*.1/ZSCORE_SCALE};CUnit.prototype.calcLatitude=function(){return THREE.Math.degToRad(LAT_MIN+.2*this.cell_y/111.321)};CUnit.prototype.calcLongitude=function(){return THREE.Math.degToRad(LNG_MIN+.2*this.cell_x/(111.321*Math.cos(this.latitude)))};CUnit.prototype.calcAngularDistance=function(){return.001*Math.sqrt(Math.pow(200*this.cell_x,2)+Math.pow(200*this.cell_y,2))/6371};
CUnit.prototype.calcBearing=function(){return Math.atan2(this.cell_x-xLowerBound,this.cell_y-yLowerBound)};CUnit.prototype.getLongitude=function(){return THREE.Math.radToDeg(this.longitude).toFixed(6)};CUnit.prototype.getLatitude=function(){return THREE.Math.radToDeg(this.latitude).toFixed(6)};CUnit.prototype.getAngularDistance=function(){return THREE.Math.radToDeg(this.angularDistance)};CUnit.prototype.getBearing=function(){return this.bearing};
CUnit.prototype.update=function(){this.bearing=this.calcBearing();this.latitude=this.calcLatitude();this.longitude=this.calcLongitude()};CUnit.prototype.getCurrentSize=function(){return this.currentSize};
